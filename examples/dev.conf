[global]
# priority is using priority class on windows, and "nice" on unixes - it's acting on CPU usage only
priority = "low"
# run 'version' when no command is specified when invoking resticprofile
default-command = "version"
# initialize a repository if none exist at location
initialize = false

# a group is a profile that will call all profiles one by one
[groups]
# when starting a backup on profile "full-backup", it will run the "root" and "src" backup profiles
full-backup = [ "root", "src" ]

# Default profile when not specified (-n or --name)
# Please note there's no default inheritance from the 'default' profile (you can use the 'inherit' flag if needed)
[default]
repository = "/Volumes/RAMDisk"
password-file = "key"
initialize = false

[default.env]
TMP= "/tmp"

# New profile named 'root'
[root]
inherit = "default"
initialize = true

# 'backup' command of profile 'root'
[root.backup]
exclude-file = [ "root-excludes", "excludes" ]
exclude-caches = true
one-file-system = false
tag = [ "test", "dev" ]
source = [ "." ]

# retention policy for profile root
[root.retention]
before-backup = false
after-backup = true
keep-last = 3
keep-hourly = 1
keep-daily = 1
keep-weekly = 1
keep-monthly = 1
keep-yearly = 1
keep-within = "3h"
keep-tag = [ "forever" ]
compact = false
prune = false
# if path is NOT specified, it will be copied from the 'backup' source
# path = []
# the tags are NOT copied from the 'backup' command
tag = [ "test", "dev" ]
# host can be a boolean ('true' meaning current hostname) or a string to specify a different hostname
host = true

# New profile named 'src'
[src]
inherit = "default"
initialize = true
lock = "/tmp/resticprofile-profile-src.lock"

[src.snapshots]
tag = [ "test", "dev" ]

# 'backup' command of profile 'src'
[src.backup]
run-before = [ "echo Starting!", "ls -al ~/go" ]
run-after = "echo All Done!"
exclude = [ '/**/.git' ]
exclude-caches = true
one-file-system = false
tag = [ "test", "dev" ]
source = [ "~/go/src" ]
check-before = true

# retention policy for profile src
[src.retention]
before-backup = false
after-backup = true
keep-within = "30d"
compact = false
prune = true

[src.check]
check-unused = true
with-cache = true

[stdin]
inherit = "default"

[stdin.snapshots]
tag = [ "stdin" ]

[stdin.backup]
stdin = true
stdin-filename = "stdin-test"
tag = [ 'stdin' ]

[documents]
initialize = false
repository = "~/backup"

[documents.snapshots]
tag = [ "documents" ]

[documents.backup]
source = "~/Documents"

[self]
initialize = false
repository = "../backup"

[self.snapshots]
tag = [ "self" ]

[self.backup]
source = "./"

